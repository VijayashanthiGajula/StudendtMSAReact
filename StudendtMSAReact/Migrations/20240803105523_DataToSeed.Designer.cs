// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StudendtMSAReact.Context;

#nullable disable

namespace StudendtMSAReact.Migrations
{
    [DbContext(typeof(StudnetDBContext))]
    [Migration("20240803105523_DataToSeed")]
    partial class DataToSeed
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("StudendtMSAReact.Models.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<int>("Fees")
                        .HasColumnType("int");

                    b.Property<int>("IntakeId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IntakeId");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Capacity = 10,
                            Fees = 500,
                            IntakeId = 1,
                            Name = "Web Designs"
                        },
                        new
                        {
                            Id = 2,
                            Capacity = 10,
                            Fees = 700,
                            IntakeId = 1,
                            Name = "Web Development"
                        },
                        new
                        {
                            Id = 3,
                            Capacity = 10,
                            Fees = 600,
                            IntakeId = 1,
                            Name = "Mobile Development"
                        });
                });

            modelBuilder.Entity("StudendtMSAReact.Models.Intake", b =>
                {
                    b.Property<int>("IntakeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IntakeId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IntakeId");

                    b.ToTable("Intakes");

                    b.HasData(
                        new
                        {
                            IntakeId = 1,
                            Name = "Term 1"
                        },
                        new
                        {
                            IntakeId = 2,
                            Name = "Term 2"
                        },
                        new
                        {
                            IntakeId = 3,
                            Name = "Term 3"
                        },
                        new
                        {
                            IntakeId = 4,
                            Name = "Term 4"
                        });
                });

            modelBuilder.Entity("StudendtMSAReact.Models.Course", b =>
                {
                    b.HasOne("StudendtMSAReact.Models.Intake", "Intake")
                        .WithMany("Courses")
                        .HasForeignKey("IntakeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Intake");
                });

            modelBuilder.Entity("StudendtMSAReact.Models.Intake", b =>
                {
                    b.Navigation("Courses");
                });
#pragma warning restore 612, 618
        }
    }
}
